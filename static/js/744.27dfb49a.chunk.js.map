{"version":3,"file":"static/js/744.27dfb49a.chunk.js","mappings":"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","sources":["components/ReviewsInfo/ReviewsInfo.styled.js","components/ReviewsInfo/ReviewsInfo.js","components/Reviews/Reviews.js","hooks/useFetchReviews.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  /* max-width: 170px; */\n`;\n","import { ReviewsItem, ReviewsStyled } from './ReviewsInfo.styled';\n\nexport const ReviewsInfo = ({ reviewsInfo }) => {\n  return (\n    <ReviewsStyled>\n      {reviewsInfo.map(({ id, author, content }) => {\n        return (\n          <ReviewsItem key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </ReviewsItem>\n        );\n      })}\n    </ReviewsStyled>\n  );\n};\n","import { ReviewsInfo } from 'components/ReviewsInfo/ReviewsInfo';\nimport { useFetchMovieReviews } from 'hooks/useFetchReviews';\nimport React from 'react';\n\nconst Reviews = () => {\n  const { reviews, isLoading, error } = useFetchMovieReviews();\n\n  return (\n    <>\n      {isLoading && <h5>Loading...</h5>}\n      {error && <h5>Something went wrong...</h5>}\n      {reviews.length > 0 ? (\n        <ReviewsInfo reviewsInfo={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'service/api';\n\nexport const useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState([]); // null  не подходит\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    const getReviewsItem = async () => {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        // console.log('Reviews', data);\n        setReviews(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getReviewsItem();\n  }, [movieId]);\n\n  return { reviews, isLoading, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = '2538fce76e0bd4d5dc25f5ba463caaa5';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  // language: 'uk-UA',\n  language: 'en-US',\n};\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  // console.log('data.results', data.results);\n  return data.results;\n};\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchSearchMovies = async movieName => {\n  const { data } = await axios.get(`search/movie?query=${movieName}`);\n  // console.log('SearchMovies', data.results);\n  return data.results;\n};\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieActors = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  // console.log('cast', data.cast);\n  return data.cast;\n};\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  // console.log('reviews', data.cast);\n  return data.results;\n};\n"],"names":["ReviewsStyled","styled","_templateObject","_taggedTemplateLiteral","ReviewsItem","_templateObject2","ReviewsInfo","_ref","reviewsInfo","_jsx","children","map","_ref2","id","author","content","_jsxs","_useFetchMovieReviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getReviewsItem","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieReviews","sent","t0","finish","stop","apply","arguments","useFetchMovieReviews","_Fragment","length","axios","api_key","language","fetchTrendMovies","_yield$axios$get","abrupt","results","fetchSearchMovies","_callee2","movieName","_yield$axios$get2","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}