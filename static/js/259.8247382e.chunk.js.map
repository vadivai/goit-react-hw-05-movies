{"version":3,"file":"static/js/259.8247382e.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies.js","hooks/useFetchSearch.js","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title, name, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name || original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\n// export const SearchbarStyled = styled.header`\n//   top: 0;\n//   left: 0;\n//   position: sticky;\n//   z-index: 1100;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   min-height: 32px;\n//   padding-right: 24px;\n//   padding-left: 24px;\n//   color: #fff;\n//   background-color: #3f51b5;\n//   box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n//     0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n// `;\n\nexport const SearchFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  /* justify-content: space-evenly; */\n  /* width: 100%; */\n  /* max-width: 350px; */\n  /* background-color: grey; */\n  /* border-radius: 3px;\n  /* overflow: hidden; */\n  /* padding: 0 4px 2px; */\n`;\n\nexport const SearchInputStyled = styled.input`\n  display: inline-block;\n  width: 25%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  background-color: #ebeded;\n  border-radius: 6px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    align-items: center;\n  }\n`;\n\nexport const SearchButtonStyled = styled.button`\n  display: inline-block;\n  border: 0;\n  padding: 6px;\n  /* opacity: 0.6; */\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  padding: 10px 2px;\n  border-radius: 6px;\n  background-color: #ebeded;\n  margin-left: 15px;\n\n  &:hover {\n    opacity: 1;\n    color: white;\n    background-color: #474fed;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport {\n  SearchButtonStyled,\n  SearchFormStyled,\n  SearchInputStyled,\n} from './SearchBar.styled';\nimport { useState } from 'react';\n\nexport const Searchbar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [, setSearchParams] = useSearchParams();\n  const onChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery === '') {\n      return alert('PLEASE, ENTER MOVIE NAME!');\n    }\n\n    setSearchParams({ query: searchQuery });\n\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchFormStyled onSubmit={onSubmit}>\n      <SearchInputStyled\n        type=\"text\"\n        name=\"movieName\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        value={searchQuery}\n        onChange={onChange}\n      />\n      <SearchButtonStyled type=\"submit\">Search</SearchButtonStyled>\n    </SearchFormStyled>\n  );\n};\n","import React from 'react';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { useFetchSearch } from 'hooks/useFetchSearch';\nimport { MoviesList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const { movies, isLoading, error } = useFetchSearch();\n\n  return (\n    <>\n      <Searchbar />\n      {isLoading && <h3>Loading...</h3>}\n      {error && <h2>Something went wrong...</h2>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'service/api';\n\nexport const useFetchSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  // console.log('searchParams', searchQuery );\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setIsLoading(true);\n    setError(false);\n\n    const getSearchMovies = async () => {\n      try {\n        const data = await fetchSearchMovies(searchQuery);\n        // console.log('SearchMovies', data);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getSearchMovies();\n  }, [searchQuery]);\n\n  // const onHandleSubmit = value => {\n  //   setSearchParams({ query: value });\n  // };\n  // setSearchParams({ query: movieName });\n\n  return { movies, isLoading, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = '2538fce76e0bd4d5dc25f5ba463caaa5';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  // language: 'uk-UA',\n  language: 'en-US',\n};\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  // console.log('data.results', data.results);\n  return data.results;\n};\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchSearchMovies = async movieName => {\n  const { data } = await axios.get(`search/movie?query=${movieName}`);\n  // console.log('SearchMovies', data.results);\n  return data.results;\n};\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieActors = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  // console.log('cast', data.cast);\n  return data.cast;\n};\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  // console.log('reviews', data.cast);\n  return data.results;\n};\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","name","original_title","Link","to","concat","state","from","SearchFormStyled","styled","_templateObject","_taggedTemplateLiteral","SearchInputStyled","_templateObject2","SearchButtonStyled","_templateObject3","Searchbar","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","setSearchParams","_jsxs","onSubmit","event","preventDefault","alert","query","type","autoComplete","autoFocus","placeholder","value","onChange","e","target","_useFetchSearch","_searchParams$get","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","get","useEffect","getSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchSearchMovies","sent","t0","finish","stop","apply","arguments","useFetchSearch","_Fragment","length","axios","api_key","language","fetchTrendMovies","_yield$axios$get","abrupt","results","_callee2","movieName","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}