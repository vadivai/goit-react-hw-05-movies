{"version":3,"file":"static/js/643.af073490.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js","hooks/useFetchMovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  /* padding: 0 20px; */\n  gap: 10px;\n  margin: 10px 0;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  gap: 10px;\n`;\n","import { Description, ItemWrapper } from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  movieInfo: {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => {\n  return (\n    <ItemWrapper>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={title}\n        width=\"180\"\n      />\n      <Description>\n        <h3>\n          {title} ({release_date.slice(0, 4)})\n        </h3>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h4>Overview:</h4>\n        <p>{overview}</p>\n        <h4>Genres:</h4>\n        <p>{genres.map(({ name }) => name).join(', ')}</p>\n      </Description>\n    </ItemWrapper>\n  );\n};\n","import React, { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useFetchMovieDetails } from 'hooks/useFetchMovieDetails';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nexport const MovieDetails = () => {\n  const { movie, isLoading, error } = useFetchMovieDetails();\n  // console.log('movie', movie);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {isLoading && <h3>Loading...</h3>}\n      {error && <h2>Something went wrong...</h2>}\n      {movie && <MovieInfo movieInfo={movie} />}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    const getMovieItem = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        // console.log('DataDetails', data);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieItem();\n  }, [movieId]);\n\n  return { movie, isLoading, error };\n};\n"],"names":["ItemWrapper","styled","_templateObject","_taggedTemplateLiteral","Description","_templateObject2","MovieInfo","_ref","_ref$movieInfo","movieInfo","title","poster_path","release_date","vote_average","overview","genres","_jsxs","children","_jsx","src","concat","alt","width","slice","Math","round","map","_ref2","name","join","MovieDetails","_location$state$from","_location$state","_useFetchMovieDetails","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getMovieItem","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieDetails","sent","t0","finish","stop","apply","arguments","useFetchMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","_Fragment","Link","to","current","Suspense","fallback","Outlet"],"sourceRoot":""}