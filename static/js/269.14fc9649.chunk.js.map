{"version":3,"file":"static/js/269.14fc9649.chunk.js","mappings":"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","sources":["components/CastInfo/CastInfo.styled.js","components/CastInfo/CastInfo.js","components/Cast/Cast.js","hooks/useFetchCast.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  /* justify-content: center; */\n`;\n\nexport const CastItem = styled.li`\n  max-width: 170px;\n`;\n\nexport const NoPhoto2 = styled.div`\n  width: 180px;\n  height: 255px;\n  color: grey;\n`;\n","import NoPhoto from 'other/no_photo-min.jpg';\nimport { CastItem, CastStyled } from './CastInfo.styled';\n\nexport const CastInfo = ({ castInfo }) => {\n  return (\n    <CastStyled>\n      {castInfo.map(({ cast_id, profile_path, name, character }) => {\n        return (\n          <CastItem key={cast_id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : NoPhoto\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Role: {character}</p>\n          </CastItem>\n        );\n      })}\n    </CastStyled>\n  );\n};\n","import React from 'react';\nimport { useFetchMovieCast } from 'hooks/useFetchCast';\nimport { CastInfo } from 'components/CastInfo/CastInfo';\n\nconst Cast = () => {\n  const { cast, isLoading, error } = useFetchMovieCast();\n\n  return (\n    <>\n      {isLoading && <h5>Loading...</h5>}\n      {error && <h5>Something went wrong...</h5>}\n      {cast && <CastInfo castInfo={cast} />}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors } from 'service/api';\n\nexport const useFetchMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    const getCastItem = async () => {\n      try {\n        const data = await fetchMovieActors(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCastItem();\n  }, [movieId]);\n\n  return { cast, isLoading, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = '2538fce76e0bd4d5dc25f5ba463caaa5';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  // language: 'uk-UA',\n  language: 'en-US',\n};\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  // console.log('data.results', data.results);\n  return data.results;\n};\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\nexport const fetchSearchMovies = async movieName => {\n  const { data } = await axios.get(`search/movie?query=${movieName}`);\n  // console.log('SearchMovies', data.results);\n  return data.results;\n};\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieActors = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  // console.log('cast', data.cast);\n  return data.cast;\n};\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  // console.log('reviews', data.cast);\n  return data.results;\n};\n"],"names":["CastStyled","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","_templateObject3","CastInfo","_ref","castInfo","_jsx","children","map","_ref2","cast_id","profile_path","name","character","_jsxs","src","concat","NoPhoto","alt","_useFetchMovieCast","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getCastItem","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieActors","sent","t0","finish","stop","apply","arguments","useFetchMovieCast","_Fragment","axios","api_key","language","fetchTrendMovies","_yield$axios$get","abrupt","results","fetchSearchMovies","_callee2","movieName","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}